// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// button_monitor //
// -------------- //

#define button_monitor_wrap_target 0
#define button_monitor_wrap 16

static const uint16_t button_monitor_program_instructions[] = {
            //     .wrap_target
    0x4010, //  0: in     pins, 16                   
    0x4070, //  1: in     null, 16                   
    0xa026, //  2: mov    x, isr                     
    0x4010, //  3: in     pins, 16                   
    0x4070, //  4: in     null, 16                   
    0xa046, //  5: mov    y, isr                     
    0x00a8, //  6: jmp    x != y, 8                  
    0x000a, //  7: jmp    10                         
    0x8020, //  8: push   block                      
    0x000a, //  9: jmp    10                         
    0x4010, // 10: in     pins, 16                   
    0x4070, // 11: in     null, 16                   
    0xa026, // 12: mov    x, isr                     
    0x00af, // 13: jmp    x != y, 15                 
    0x0003, // 14: jmp    3                          
    0x8020, // 15: push   block                      
    0x0003, // 16: jmp    3                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program button_monitor_program = {
    .instructions = button_monitor_program_instructions,
    .length = 17,
    .origin = -1,
};

static inline pio_sm_config button_monitor_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + button_monitor_wrap_target, offset + button_monitor_wrap);
    return c;
}
#endif

